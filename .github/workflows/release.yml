name: Release NuGet Package

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - '**.md'
  workflow_dispatch:

env:
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  NUGET_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

jobs:
  build-and-pack:
    permissions:
      contents: write

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: | 
            7.x
          source-url: ${{ env.NUGET_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Gen Changelog and Tag sources
        id: changelog
        uses: TriPSs/conventional-changelog-action@latest
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-version-file: 'true'
          skip-commit: 'true'

      - name: Restore dependencies
        run: dotnet restore **/*.csproj

      - name: Build
        run: dotnet build **/*.csproj --configuration Release /p:ContinuousIntegrationBuild=true /p:Version=${{ steps.changelog.outputs.version }} --no-restore

      - name: Pack
        run: dotnet pack ./src --configuration Release /p:Version=${{ steps.changelog.outputs.version }} --no-build --output .
      
      - name: Push NuGet to GitHub packages
        run: dotnet nuget push *.nupkg --source ${{ env.NUGET_URL }} --skip-duplicate --no-symbols true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ steps.changelog.outputs.tag }}
            name: ${{ steps.changelog.outputs.tag }}
            body: ${{steps.changelog.outputs.clean_changelog}}
            draft: false
            prerelease: false
            files: |
              *.nupkg
 
      - name: Final Message
        run: echo "ðŸŽ‰ Success!"
